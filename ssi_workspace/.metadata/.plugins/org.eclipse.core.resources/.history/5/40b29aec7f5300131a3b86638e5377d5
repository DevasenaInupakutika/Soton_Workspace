package com.example.ssitestapp;

import android.os.Build;
import android.os.Bundle;
import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.ActionBar;
import android.app.Activity;
import android.app.Application;
import android.content.Context;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;


@TargetApi(Build.VERSION_CODES.HONEYCOMB)
public class ListActivity extends Activity {

	Application myApp;
	RSSFeed feed;
	ListView lv = null;
	CustomListAdapter adapter = null;
	
	@SuppressLint("NewApi")
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.feed_list);
		
		myApp = getApplication();
		 
		// Get feed form the file
		feed = (RSSFeed) getIntent().getExtras().get("feed");
		 
		// Initialise the variables:
		lv = (ListView) findViewById(R.id.listView);
		lv.setVerticalFadingEdgeEnabled(true);
		 
		// Set an Adapter to the ListView
		adapter = new CustomListAdapter(this);
		lv.setAdapter(adapter);
		
		//Setting onItem click listener to list view.
				lv.setOnItemClickListener(new OnItemClickListener(){
					
					@Override
					public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
							long arg3) {
						// TODO Auto-generated method stub
						int pos = arg2;
						Bundle bundle = new Bundle();
						bundle.putSerializable("feed", feed);
						Intent intent = new Intent(ListActivity.this,
						DetailActivity.class);
						intent.putExtras(bundle);
						intent.putExtra("pos", pos);
						startActivity(intent);
					
						
					}

				});
				ActionBar actionBar = getActionBar();
		        actionBar.setDisplayHomeAsUpEnabled(true);
				
				// Show the Up button in the action bar.
				setupActionBar();
	}

	@TargetApi(Build.VERSION_CODES.HONEYCOMB)
	private void setupActionBar() {
		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
			getActionBar().setDisplayHomeAsUpEnabled(true);
		}
	}

   @Override
	protected void onDestroy() {
		super.onDestroy();
		adapter.imageLoader.clearCache();
		adapter.notifyDataSetChanged();
		}
	
	class CustomListAdapter extends BaseAdapter{

		private LayoutInflater layoutInflater;
		public ImageLoader imageLoader;
		
		 
		public CustomListAdapter(ListActivity activity) {
		 
		layoutInflater = (LayoutInflater) activity
		                  .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		imageLoader = new ImageLoader(activity.getApplicationContext());
		
		
		}

		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return feed.getItemCount();
		}

		@Override
		public Object getItem(int position) {
			// TODO Auto-generated method stub
			return position;
		}

		@Override
		public long getItemId(int position) {
			// TODO Auto-generated method stub
			return position;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			// TODO Auto-generated method stub
			View listItem = convertView;
				int pos = position;
				if (listItem == null) {
				          listItem = layoutInflater.inflate(R.layout.list_item, null);
				}
				 
				// Initialise the views in the layout
				ImageView iv = (ImageView) listItem.findViewById(R.id.thumb);
				TextView tvTitle = (TextView) listItem.findViewById(R.id.title);
				TextView tvDate = (TextView) listItem.findViewById(R.id.date);
				 
				// Set the views in the layout
				imageLoader.DisplayImage(feed.getItem(pos).getImage(), iv);
				tvTitle.setText(feed.getItem(pos).getTitle());
				tvDate.setText(feed.getItem(pos).getDate());
				 
				return listItem;
			
		}
	}
}
