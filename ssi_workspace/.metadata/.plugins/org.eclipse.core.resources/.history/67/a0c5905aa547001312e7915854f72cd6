package com.example.ssitestapp;

import java.io.Serializable;

import android.net.ConnectivityManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.app.ActionBar;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.ListActivity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import javax.xml.parsers.*;
import org.xml.sax.*;


public class MainActivity extends Activity {

	Button eventsButton,blogButton,evalButton;
	public final static String EXTRA_MESSAGE = "com.example.ssitestapp.MESSAGE";
	private String RSSFEEDURL = "http://www.software.ac.uk/blog/rss/";
	RSSFeed feed;
			
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        eventsButton = (Button) findViewById(R.id.events);   
        blogButton = (Button) findViewById(R.id.blog);
       // evalButton = (Button) findViewById(R.id.eval);

        ConnectivityManager conMgr = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
        if (conMgr.getActiveNetworkInfo() == null
        && !conMgr.getActiveNetworkInfo().isConnected()
        && !conMgr.getActiveNetworkInfo().isAvailable()) {
        // No connectivity - Show alert
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setMessage("Unable to reach server, \nPlease check your connectivity.")
        .setTitle("TD RSS Reader")
        .setCancelable(false)
        .setPositiveButton("Exit",
        new DialogInterface.OnClickListener() {
        @Override
        public void onClick(DialogInterface dialog,
        int id) {
        finish();
        }
        });
         
        AlertDialog alert = builder.create();
        alert.show();
         
        } else {
        // Connected - Start parsing
        new AsyncLoadXMLFeed().execute();
         
        }
		
         
        
        //Called when Events Button is clicked.
        /*eventsButton.setOnClickListener(new View.OnClickListener() {
			
		@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				if(v.getId()==R.id.events)
				{
				    //Intent eventspage=new Intent(this,DisplayEventsList.class);
				   // startActivity(eventspage);
				}
				
			}
		});*/
    }
    
    private class AsyncLoadXMLFeed extends AsyncTask{

		@Override
		protected Object doInBackground(Object... arg0) {
			// TODO Auto-generated method stub
			//Obtain RSS feed.
			DOMParser myParser = new DOMParser();
		
			
			return null;
		}
		
		protected void onPostExecute(Void result) {
			super.onPostExecute(result);
			 
			Bundle bundle = new Bundle();
			Serializable feed;
			bundle.putSerializable("feed", feed);
			 
			// launch List activity
			Intent intent = new Intent(this,DisplayBlogsList.class);
			intent.putExtras(bundle);
			startActivity(intent);
			 
			// kill this activity
			finish();
			}
		
	}


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
    public void eventNotifier(View v){
    	
    	Intent eventspage=new Intent(this,DisplayEventsList.class);
		startActivity(eventspage);
		
		
    }
    
    public void blogPosts(View v){
    	
    	Intent blogspage=new Intent(this,DisplayBlogsList.class);
		startActivity(blogspage);

    }
    
}
