package uk.ac.software.parser;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;

import uk.ac.software.blogreader.image.ImageLoader;

import android.util.Log;

public class SAXSSIParser extends DefaultHandler {

	
	String TAG = "SAXSSIHelper";
	
	Boolean currTag = false;
	String currTagVal = "";
	
	// Feed and Blog objects to use for temporary storage
	public RSSItem item = new RSSItem();
	//public RSSFeed feed = new RSSFeed();
	public List<RSSItem> feeds = new ArrayList<RSSItem>();
	
	//Number of blogs added so far
	private int blogsAdded = 0;
	
	//Number of blogs to download
	private static final int BLOGS_LIMIT = 20;
	
	private String htmlBlog = new String();
	String htmlString;
	private static StringBuilder sb1;
	public ImageLoader imageLoader;
	
	//Current characters being accumulated
	StringBuffer chars = new StringBuffer();
	
	public List<RSSItem> getBlogList() {
		return feeds;
	}
	
	/* 
	 * This method is called every time a start element is found (an opening XML marker)
	 * here we always reset the characters StringBuffer as we are only currently interested
	 * in the the text values stored at leaf nodes
	 * 
	 * (non-Javadoc)
	 * @see org.xml.sax.helpers.DefaultHandler#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
	 */
	public void startElement(String uri, String localName, String qName, Attributes atts) {
		chars = new StringBuffer();
	}
	
	
	/* 
	 * This method is called every time an end element is found (a closing XML marker)
	 * here we check what element is being closed, if it is a relevant leaf node that we are
	 * checking, such as Title, then we get the characters we have accumulated in the StringBuffer
	 * and set the current Blog's title to the value
	 * 
	 * If this is closing the "entry", it means it is the end of the blog, so we add that to the list
	 * and then reset our Blog object for the next one on the stream
	 * 
	 * 
	 * (non-Javadoc)
	 * @see org.xml.sax.helpers.DefaultHandler#endElement(java.lang.String, java.lang.String, java.lang.String)
	 */
	
	
}
	